// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: test.proto

package test

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Test message definition.
type Test struct {
	// Str string field
	Str string `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	// Int32 int32 field
	Int32 int32 `protobuf:"varint,2,opt,name=Int32,proto3" json:"Int32,omitempty"`
	// Int64 int64 field
	Int64 int64 `protobuf:"varint,3,opt,name=Int64,proto3" json:"Int64,omitempty"`
	// Float float field
	Float float32 `protobuf:"fixed32,4,opt,name=Float,proto3" json:"Float,omitempty"`
	// Double double field
	Double float64 `protobuf:"fixed64,5,opt,name=Double,proto3" json:"Double,omitempty"`
	// Bool bool field
	Bool bool `protobuf:"varint,6,opt,name=Bool,proto3" json:"Bool,omitempty"`
	// Bytest byte[] field
	Bytes []byte `protobuf:"bytes,7,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	// Timestamp time.Time field
	Timestamp time.Time `protobuf:"bytes,8,opt,name=Timestamp,proto3,stdtime" json:"Timestamp"`
	// Timestamp time.Time field
	TimestampMissing time.Time `protobuf:"bytes,9,opt,name=TimestampMissing,proto3,stdtime" json:"TimestampMissing"`
	// TimestampNullable *time.Time field
	TimestampNullable *time.Time `protobuf:"bytes,10,opt,name=TimestampNullable,proto3,stdtime" json:"TimestampNullable,omitempty"`
	// TimestampNullableWithNilValue *time.Time field
	TimestampNullableWithNilValue *time.Time `protobuf:"bytes,11,opt,name=TimestampNullableWithNilValue,proto3,stdtime" json:"TimestampNullableWithNilValue,omitempty"`
	// DurationStandard time.Duration field (standard)
	DurationStandard time.Duration `protobuf:"varint,12,opt,name=DurationStandard,proto3,stdduration" json:"DurationStandard,omitempty"`
	// DurationStandardMissing time.Duration field (standard) missing in input data
	DurationStandardMissing time.Duration `protobuf:"varint,13,opt,name=DurationStandardMissing,proto3,stdduration" json:"DurationStandardMissing,omitempty"`
	// DurationCustom time.Duration field (with casttype)
	DurationCustom Duration `protobuf:"varint,14,opt,name=DurationCustom,proto3,casttype=Duration" json:"DurationCustom,omitempty"`
	// DurationCustomMissing time.Duration field (with casttype) missing in input data
	DurationCustomMissing Duration `protobuf:"varint,15,opt,name=DurationCustomMissing,proto3,casttype=Duration" json:"DurationCustomMissing,omitempty"`
	// StringList []string field
	StringList []string `protobuf:"bytes,16,rep,name=StringList,proto3" json:"StringList,omitempty"`
	// StringListEmpty []string field
	StringListEmpty []string `protobuf:"bytes,17,rep,name=StringListEmpty,proto3" json:"StringListEmpty,omitempty"`
	// BytesList [][]byte field
	BytesList [][]byte `protobuf:"bytes,19,rep,name=BytesList,proto3" json:"BytesList,omitempty"`
	// TimestampList []time.Time field
	TimestampList []*time.Time `protobuf:"bytes,20,rep,name=TimestampList,proto3,stdtime" json:"TimestampList,omitempty"`
	// DurationCustomList []time.Duration field
	DurationCustomList []Duration `protobuf:"varint,21,rep,packed,name=DurationCustomList,proto3,casttype=Duration" json:"DurationCustomList,omitempty"`
	// Nested nested message field, non-nullable
	Nested Nested `protobuf:"bytes,22,opt,name=Nested,proto3" json:"Nested"`
	// NestedNullable nested message field, nullabel
	NestedNullable *Nested `protobuf:"bytes,23,opt,name=NestedNullable,proto3" json:"NestedNullable,omitempty"`
	// NestedNullableWithNilValue nested message field, with no value set
	NestedNullableWithNilValue *Nested `protobuf:"bytes,24,opt,name=NestedNullableWithNilValue,proto3" json:"NestedNullableWithNilValue,omitempty"`
	// NestedList nested message array
	NestedList []Nested `protobuf:"bytes,25,rep,name=NestedList,proto3" json:"NestedList"`
	// NestedListNullable nested message array
	NestedListNullable []*Nested `protobuf:"bytes,26,rep,name=NestedListNullable,proto3" json:"NestedListNullable,omitempty"`
	// Map normal map
	Map map[string]string `protobuf:"bytes,27,rep,name=Map,proto3" json:"Map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// MapObject is the object map
	MapObject map[string]Nested `protobuf:"bytes,29,rep,name=MapObject,proto3" json:"MapObject" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// MapObjectNullable is the object map with nullable values
	MapObjectNullable    map[string]*Nested `protobuf:"bytes,30,rep,name=MapObjectNullable,proto3" json:"MapObjectNullable,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}
func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

// Nested message definition
type Nested struct {
	// Str string field
	Str string `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	// Nested repeated nested messages
	NestedList []*OtherNested `protobuf:"bytes,2,rep,name=NestedList,proto3" json:"NestedList,omitempty"`
	// Nested map repeated nested messages
	Map map[string]string `protobuf:"bytes,3,rep,name=Map,proto3" json:"Map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// NestedMObj nested object map
	MapObjectNested      map[string]*OtherNested `protobuf:"bytes,4,rep,name=MapObjectNested,proto3" json:"MapObjectNested,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Nested) Reset()         { *m = Nested{} }
func (m *Nested) String() string { return proto.CompactTextString(m) }
func (*Nested) ProtoMessage()    {}
func (*Nested) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}
func (m *Nested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nested.Unmarshal(m, b)
}
func (m *Nested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nested.Marshal(b, m, deterministic)
}
func (m *Nested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nested.Merge(m, src)
}
func (m *Nested) XXX_Size() int {
	return xxx_messageInfo_Nested.Size(m)
}
func (m *Nested) XXX_DiscardUnknown() {
	xxx_messageInfo_Nested.DiscardUnknown(m)
}

var xxx_messageInfo_Nested proto.InternalMessageInfo

// OtherNested message nested into nested message
type OtherNested struct {
	// Str string field
	Str                  string   `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OtherNested) Reset()         { *m = OtherNested{} }
func (m *OtherNested) String() string { return proto.CompactTextString(m) }
func (*OtherNested) ProtoMessage()    {}
func (*OtherNested) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{2}
}
func (m *OtherNested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OtherNested.Unmarshal(m, b)
}
func (m *OtherNested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OtherNested.Marshal(b, m, deterministic)
}
func (m *OtherNested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OtherNested.Merge(m, src)
}
func (m *OtherNested) XXX_Size() int {
	return xxx_messageInfo_OtherNested.Size(m)
}
func (m *OtherNested) XXX_DiscardUnknown() {
	xxx_messageInfo_OtherNested.DiscardUnknown(m)
}

var xxx_messageInfo_OtherNested proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Test)(nil), "test.Test")
	proto.RegisterMapType((map[string]string)(nil), "test.Test.MapEntry")
	proto.RegisterMapType((map[string]Nested)(nil), "test.Test.MapObjectEntry")
	proto.RegisterMapType((map[string]*Nested)(nil), "test.Test.MapObjectNullableEntry")
	proto.RegisterType((*Nested)(nil), "test.Nested")
	proto.RegisterMapType((map[string]string)(nil), "test.Nested.MapEntry")
	proto.RegisterMapType((map[string]*OtherNested)(nil), "test.Nested.MapObjectNestedEntry")
	proto.RegisterType((*OtherNested)(nil), "test.OtherNested")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 762 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x4e, 0xdb, 0x4a,
	0x14, 0xce, 0xc4, 0x26, 0x37, 0x39, 0x84, 0x90, 0x0c, 0x01, 0x86, 0xdc, 0x4b, 0xe2, 0x8b, 0x54,
	0x61, 0x75, 0x11, 0x5a, 0x40, 0xa8, 0x42, 0x6d, 0x17, 0x2e, 0x20, 0xf5, 0x27, 0x50, 0x0d, 0xb4,
	0x5d, 0x3b, 0xc5, 0x0d, 0x06, 0x27, 0xb6, 0xec, 0x49, 0xab, 0x3c, 0x45, 0xbb, 0xec, 0x23, 0xb1,
	0xac, 0xfa, 0x00, 0x54, 0xe5, 0x31, 0xba, 0xaa, 0x3c, 0x13, 0xff, 0xc6, 0xa1, 0x85, 0xdd, 0x9c,
	0xef, 0x7c, 0xdf, 0xe7, 0x39, 0x3f, 0x99, 0x00, 0x30, 0xc3, 0x63, 0x6d, 0xc7, 0xb5, 0x99, 0x8d,
	0x65, 0xff, 0xdc, 0xa8, 0xf7, 0xec, 0x9e, 0xcd, 0x81, 0x0d, 0xff, 0x24, 0x72, 0x8d, 0x56, 0xcf,
	0xb6, 0x7b, 0x96, 0xb1, 0xc1, 0xa3, 0xee, 0xf0, 0xc3, 0x06, 0x33, 0xfb, 0x86, 0xc7, 0xf4, 0xbe,
	0x33, 0x26, 0x34, 0xd3, 0x84, 0x4f, 0xae, 0xee, 0x38, 0x86, 0xeb, 0x89, 0xfc, 0xda, 0xe7, 0x39,
	0x90, 0x4f, 0x0c, 0x8f, 0xe1, 0x2a, 0x48, 0xc7, 0xcc, 0x25, 0x48, 0x41, 0x6a, 0x89, 0xfa, 0x47,
	0x5c, 0x87, 0x99, 0xe7, 0x03, 0xb6, 0xb5, 0x49, 0xf2, 0x0a, 0x52, 0x67, 0xa8, 0x08, 0xc6, 0xe8,
	0xce, 0x36, 0x91, 0x14, 0xa4, 0x4a, 0x54, 0x04, 0x3e, 0x7a, 0x60, 0xd9, 0x3a, 0x23, 0xb2, 0x82,
	0xd4, 0x3c, 0x15, 0x01, 0x5e, 0x82, 0xc2, 0x9e, 0x3d, 0xec, 0x5a, 0x06, 0x99, 0x51, 0x90, 0x8a,
	0xe8, 0x38, 0xc2, 0x18, 0x64, 0xcd, 0xb6, 0x2d, 0x52, 0x50, 0x90, 0x5a, 0xa4, 0xfc, 0xec, 0x3b,
	0x68, 0x23, 0x66, 0x78, 0xe4, 0x1f, 0x05, 0xa9, 0x65, 0x2a, 0x02, 0xac, 0x41, 0xe9, 0x24, 0xa8,
	0x88, 0x14, 0x15, 0xa4, 0xce, 0x6e, 0x36, 0xda, 0xa2, 0xa4, 0x76, 0x50, 0x52, 0x3b, 0x64, 0x68,
	0xc5, 0xcb, 0xab, 0x56, 0xee, 0xcb, 0x8f, 0x16, 0xa2, 0x91, 0x0c, 0xbf, 0x86, 0x6a, 0x18, 0x74,
	0x4c, 0xcf, 0x33, 0x07, 0x3d, 0x52, 0xba, 0x85, 0xd5, 0x84, 0x1a, 0x53, 0xa8, 0x85, 0xd8, 0xe1,
	0xd0, 0xb2, 0x74, 0xbf, 0x44, 0xf8, 0x2b, 0x4b, 0xc4, 0x2d, 0x27, 0xe5, 0xf8, 0x1c, 0x56, 0x27,
	0xc0, 0x77, 0x26, 0x3b, 0x3b, 0x34, 0xad, 0xb7, 0xba, 0x35, 0x34, 0xc8, 0xec, 0x2d, 0xfc, 0x6f,
	0xb6, 0xc2, 0x0f, 0xa0, 0xba, 0x37, 0x74, 0x75, 0x66, 0xda, 0x83, 0x63, 0xa6, 0x0f, 0x4e, 0x75,
	0xf7, 0x94, 0x94, 0xfd, 0x71, 0x6a, 0xf2, 0x57, 0x5e, 0x71, 0x3a, 0x8b, 0x9f, 0xc2, 0x72, 0x1a,
	0x0b, 0x5a, 0x39, 0x17, 0x13, 0x4e, 0x23, 0xe1, 0x6d, 0xa8, 0x04, 0xa9, 0x67, 0x43, 0x8f, 0xd9,
	0x7d, 0x52, 0xe1, 0xb2, 0xf2, 0xaf, 0xab, 0x56, 0x31, 0xc8, 0xd0, 0x14, 0x07, 0x6b, 0xb0, 0x98,
	0x44, 0x82, 0x6f, 0xce, 0x67, 0x88, 0xb3, 0xa9, 0xb8, 0x09, 0x70, 0xcc, 0x5c, 0x73, 0xd0, 0x7b,
	0x65, 0x7a, 0x8c, 0x54, 0x15, 0x49, 0x2d, 0xd1, 0x18, 0x82, 0x55, 0x98, 0x8f, 0xa2, 0xfd, 0xbe,
	0xc3, 0x46, 0xa4, 0xc6, 0x49, 0x69, 0x18, 0xff, 0x07, 0x25, 0xbe, 0x94, 0xdc, 0x68, 0x41, 0x91,
	0xd4, 0x32, 0x8d, 0x00, 0x7c, 0x00, 0x73, 0x61, 0xd3, 0x39, 0xa3, 0xae, 0x48, 0x7f, 0x98, 0x97,
	0xcc, 0x67, 0x95, 0x94, 0xe1, 0xc7, 0x80, 0x93, 0x85, 0x70, 0xb3, 0x45, 0x45, 0x9a, 0x28, 0x38,
	0x83, 0x87, 0xef, 0x43, 0xe1, 0xd0, 0xf0, 0x98, 0x71, 0x4a, 0x96, 0xf8, 0xba, 0x94, 0xdb, 0xfc,
	0x21, 0x11, 0x98, 0x26, 0xfb, 0x3b, 0x4d, 0xc7, 0x0c, 0xbc, 0x0b, 0x15, 0x71, 0x0a, 0x57, 0x78,
	0x79, 0x8a, 0x06, 0xd1, 0x14, 0x13, 0x53, 0x68, 0x24, 0x91, 0xc4, 0xaa, 0x92, 0xa9, 0x3e, 0x37,
	0xa8, 0xf0, 0x26, 0x80, 0xc8, 0xf2, 0x8a, 0x57, 0x78, 0xfb, 0xb2, 0xee, 0x1f, 0x63, 0x61, 0x0d,
	0x70, 0x14, 0x85, 0x75, 0x34, 0xa6, 0x68, 0x11, 0xcd, 0x60, 0xe3, 0x7b, 0x20, 0x75, 0x74, 0x87,
	0xfc, 0xcb, 0x45, 0x0b, 0x42, 0xe4, 0x3f, 0x89, 0xed, 0x8e, 0xee, 0xec, 0x0f, 0x98, 0x3b, 0xa2,
	0x7e, 0x1e, 0x3f, 0x81, 0x52, 0x47, 0x77, 0x8e, 0xba, 0xe7, 0xc6, 0x7b, 0x46, 0x56, 0x39, 0x79,
	0x25, 0x49, 0x16, 0x39, 0x2e, 0x19, 0x5f, 0x35, 0x52, 0xe0, 0x23, 0xa8, 0x85, 0x41, 0x78, 0xd1,
	0x26, 0xb7, 0xf9, 0x3f, 0xcb, 0x26, 0xe0, 0x88, 0x1b, 0x4c, 0x6a, 0x1b, 0x3b, 0x50, 0x0c, 0x2e,
	0xe8, 0x3f, 0xde, 0x17, 0xc6, 0x28, 0x78, 0xbc, 0x2f, 0x8c, 0x91, 0xff, 0x9c, 0x7e, 0xe4, 0xb3,
	0xc8, 0x73, 0x4c, 0x04, 0xbb, 0xf9, 0x47, 0xa8, 0xf1, 0x02, 0x2a, 0xc9, 0xbb, 0x66, 0xa8, 0xd7,
	0xe2, 0xea, 0x54, 0x27, 0xe3, 0x5e, 0x14, 0x96, 0xb2, 0x2f, 0x7c, 0x77, 0xcf, 0xb5, 0xef, 0xf9,
	0x60, 0x87, 0x33, 0xfe, 0x93, 0x1e, 0x26, 0x76, 0x24, 0xcf, 0xdb, 0x57, 0x13, 0x4e, 0x47, 0xec,
	0xcc, 0x70, 0xc7, 0x76, 0xf1, 0x15, 0x59, 0x17, 0xe3, 0x95, 0x38, 0x77, 0x31, 0xfe, 0xd5, 0xd4,
	0x80, 0x5f, 0xc2, 0x7c, 0x54, 0x8c, 0xf8, 0x11, 0xc9, 0xf1, 0xf9, 0x44, 0xa2, 0x38, 0x47, 0x18,
	0xa4, 0x95, 0x77, 0x9e, 0xce, 0x1b, 0xa8, 0x67, 0x7d, 0x20, 0xc3, 0x63, 0x3d, 0xd9, 0xcf, 0x8c,
	0x2e, 0xc4, 0x9a, 0xda, 0x82, 0xd9, 0x58, 0x66, 0xb2, 0xb1, 0x5a, 0xf9, 0xf2, 0x67, 0x33, 0x77,
	0x79, 0xdd, 0xcc, 0x7d, 0xbb, 0x6e, 0xe6, 0xba, 0x05, 0xfe, 0x5a, 0x6d, 0xfd, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x47, 0x8f, 0x69, 0xdc, 0x87, 0x08, 0x00, 0x00,
}
